{"version":3,"sources":["components/section.js","components/contactList.js","components/contactForm.js","components/filter.js","App.js","reportWebVitals.js","index.js"],"names":["Section","title","children","ContactList","this","props","showResults","Component","ContactForm","action","onSubmit","addContact","htmlFor","type","id","Filter","onChange","changeFilter","localContacts","JSON","parse","localStorage","getItem","INITIAL_STATE","contacts","length","name","number","filter","App","state","e","preventDefault","target","invalidName","value","contact","shortid","generate","newContacts","setState","console","log","stringify","setItem","deleteContact","item","toLowerCase","includes","map","index","onClick","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.582e4983.chunk.js","sourcesContent":["\nexport default function Section({ title, children }) {\n    return (\n        <section>\n            <h2>\n                {title}\n            </h2>\n            {children}\n        </section>\n    )\n}","import { Component } from 'react'\nimport Section from './section'\n\nclass ContactList extends Component {\n\n\n    render() {\n        return (\n            <Section title=\"Contacts\">\n                {this.props.showResults()}\n            </Section>\n        )\n    }\n}\n\nexport default ContactList","import { Component } from 'react'\nimport Section from './section'\nclass ContactForm extends Component {\n\n    render() {\n        return (\n            <Section title=\"Phonebook\">\n                <form action=\"\" onSubmit={this.props.addContact}>\n\n                    <label htmlFor=\"name\">\n                        Name <br />\n                        <input type=\"text\" id=\"name\" />\n                    </label>\n                    <br />\n                    <label htmlFor=\"number\">\n                        Number <br />\n                        <input type=\"text\" id=\"number\" />\n                    </label>\n                    <br />\n\n                    <button type=\"submit\">Add contact</button>\n                </form>\n            </Section>\n\n        )\n    }\n}\n\nexport default ContactForm\n","import { Component } from 'react'\n\nclass Filter extends Component {\n\n\n    render() {\n        return (\n\n            <label htmlFor=\"filter\">\n                <input type=\"text\" id=\"filter\" onChange={this.props.changeFilter} />\n            </label>\n\n        )\n    }\n}\n\nexport default Filter\n","import './App.css';\nimport { Component } from 'react'\nimport shortid from 'shortid'\nimport ContactList from './components/contactList'\nimport ContactForm from './components/contactForm'\nimport Filter from './components/filter'\n\nconst localContacts = JSON.parse(localStorage.getItem('contacts'))\nconst INITIAL_STATE = {\n    contacts: (([...localContacts].length > 0) && [...localContacts]) || [\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: ''\n}\n\nclass App extends Component {\n    state = {\n        ...INITIAL_STATE\n    }\n\n    addContact = e => {\n        e.preventDefault()\n        const { name, number } = e.target\n\n        if (this.invalidName(name.value)) return\n\n        const contact = {\n            \"name\": name.value,\n            \"number\": number.value,\n            \"id\": shortid.generate()\n        }\n        const newContacts = [...this.state.contacts, contact]\n\n        this.setState({\n            name: name.value,\n            number: number.value,\n            contacts: [...this.state.contacts, contact]\n        })\n        console.log(JSON.stringify(newContacts))\n        localStorage.setItem('contacts', JSON.stringify(newContacts))\n        // newContacts.map(item => localStorage.setItem(item.id, JSON.stringify(item))\n        // localStorage.setItem('contacts', [...newContacts])\n    }\n\n    deleteContact = (id) => {\n        const newContacts = this.state.contacts.filter(contact => contact.id !== id)\n        this.setState({ ...this.state, contacts: [...newContacts] })\n\n        localStorage.setItem('contacts', JSON.stringify(newContacts))\n    }\n\n    showResults = () => {\n        console.log(INITIAL_STATE)\n        return this.state.contacts.filter(item => item.name.toLowerCase().includes(this.state.filter)).map((item, index) =>\n            <div key={shortid.generate()}> {item.name} {item.number} <button onClick={() => this.deleteContact(item.id)}>delete</button></ div>)\n\n    }\n\n    changeFilter = (e) => {\n        const { value } = e.target\n        this.setState({ ...this.state, filter: value.toLowerCase() })\n    }\n\n    //name validation\n    invalidName = (name) => {\n        const foundUsers = this.state.contacts.filter(item => item.name === name)\n        if (foundUsers.length > 0) {\n            alert('user already exists')\n            return true\n        }\n        return false\n    }\n\n    render() {\n        return (\n            <div>\n                <ContactForm addContact={this.addContact} />\n                <Filter changeFilter={this.changeFilter} />\n                <ContactList showResults={this.showResults} />\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}